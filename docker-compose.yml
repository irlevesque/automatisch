version: '3.9'
services:
  main:
    image: 'automatischio/automatisch:${IMAGE_TAG}'
    entrypoint: /compose-entrypoint.sh
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file: 
      - stack.env
    volumes:
      - automatisch_storage:/automatisch/storage
  worker:
    image: 'automatischio/automatisch:${IMAGE_TAG}'
    entrypoint: /compose-entrypoint.sh
    depends_on:
      - main
    env_file: 
      - stack.env
    environment:
      - WORKER=true
    volumes:
      - automatisch_storage:/automatisch/storage
  postgres:
    image: 'postgres:14.5'
    env_file: stack.env
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: 'redis:7.0.4'
    volumes:
      - redis_data:/data
volumes:
  automatisch_storage:
  postgres_data:
  redis_data:
